#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.0b1 on Sat Oct 26 07:47:27 2024
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
import os,sys
import configparser
from ft8dc import ft8dc
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        self.ft8dc = ft8dc(self)

        self.default_configs = {'win': {'winfo_width': '1102','winfo_height': '586','winfo_x': '1222','winfo_y': '254'},
                           'udp': {'ip': '127.0.0.1','num': '2239'},
                           'adif': {'file': 'adif.adi'}}
        self.path_current_dir = os.path.dirname(sys.argv[0])
        self.config_file = os.path.join(self.path_current_dir, 'ft8dcm.ini')
        self.icon_file = os.path.join(self.path_current_dir, 'ft8dcm.ico')
        self.config = configparser.ConfigParser()
        self.config.read_dict(self.default_configs)
        self.config.read(self.config_file)
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetTitle("FT8")

        self.panel_1 = wx.ScrolledWindow(self, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
        self.panel_1.SetScrollRate(10, 10)

        sizer_1 = wx.BoxSizer(wx.VERTICAL)

        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(sizer_2, 1, wx.SHAPED | wx.TOP, 0)

        self.button_start = wx.ToggleButton(self.panel_1, wx.ID_ANY, "Start")
        sizer_2.Add(self.button_start, 0, wx.ALL, 5)

        label_1 = wx.StaticText(self.panel_1, wx.ID_ANY, "adif file: ", style=wx.ALIGN_CENTER_HORIZONTAL)
        sizer_2.Add(label_1, 0, wx.ALIGN_CENTER_VERTICAL | wx.BOTTOM | wx.TOP, 5)

        self.text_file = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        self.text_file.SetMinSize((300, -1))
        self.text_file.SetValue(self.config['adif']['file'])
        sizer_2.Add(self.text_file, 0, wx.ALL, 5)

        self.button_file = wx.Button(self.panel_1, wx.ID_ANY, "File")
        sizer_2.Add(self.button_file, 0, wx.ALL, 5)

        label_2 = wx.StaticText(self.panel_1, wx.ID_ANY, "    IP address: ", style=wx.ALIGN_CENTER_HORIZONTAL)
        sizer_2.Add(label_2, 0, wx.ALIGN_CENTER_VERTICAL | wx.BOTTOM | wx.TOP, 5)

        self.text_ctrl_ipaddr = wx.TextCtrl(self.panel_1, wx.ID_ANY, "127.0.0.1")
        sizer_2.Add(self.text_ctrl_ipaddr, 0, wx.ALL, 5)

        label_3 = wx.StaticText(self.panel_1, wx.ID_ANY, "Port: ", style=wx.ALIGN_CENTER_HORIZONTAL)
        sizer_2.Add(label_3, 0, wx.ALIGN_CENTER_VERTICAL | wx.BOTTOM | wx.TOP, 5)

        self.text_ctrl_port = wx.TextCtrl(self.panel_1, wx.ID_ANY, "2239")
        sizer_2.Add(self.text_ctrl_port, 0, wx.ALL, 5)

        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(sizer_3, 100, wx.ALL | wx.EXPAND, 0)

        grid_sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3.Add(grid_sizer_1, 1, wx.SHAPED | wx.TOP, 0)

        self.label_freq = wx.StaticText(self.panel_1, wx.ID_ANY, "Freq", style=wx.ALIGN_RIGHT)
        grid_sizer_1.Add(self.label_freq, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 30)

        self.label_band = wx.StaticText(self.panel_1, wx.ID_ANY, "Band", style=wx.ALIGN_LEFT)
        grid_sizer_1.Add(self.label_band, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 10)

        self.label_mode = wx.StaticText(self.panel_1, wx.ID_ANY, "Mode", style=wx.ALIGN_LEFT)
        grid_sizer_1.Add(self.label_mode, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 5)

        self.label_rx = wx.StaticText(self.panel_1, wx.ID_ANY, "Rx", style=wx.ALIGN_RIGHT)
        grid_sizer_1.Add(self.label_rx, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 15)

        self.label_tx = wx.StaticText(self.panel_1, wx.ID_ANY, "Tx", style=wx.ALIGN_RIGHT)
        grid_sizer_1.Add(self.label_tx, 0, wx.ALIGN_CENTER_VERTICAL | wx.BOTTOM | wx.TOP, 5)

        self.list_ctrl_data = wx.ListCtrl(self.panel_1, wx.ID_ANY, style=wx.LC_HRULES | wx.LC_REPORT | wx.LC_VRULES)
        self.list_ctrl_data.SetFont(wx.Font(9, wx.FONTFAMILY_MODERN, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, ""))
        self.list_ctrl_data.AppendColumn("S", format=wx.LIST_FORMAT_LEFT, width=-1)
        self.list_ctrl_data.AppendColumn("Call", format=wx.LIST_FORMAT_LEFT, width=-1)
        self.list_ctrl_data.AppendColumn("Grid", format=wx.LIST_FORMAT_LEFT, width=-1)
        self.list_ctrl_data.AppendColumn("Sig", format=wx.LIST_FORMAT_LEFT, width=-1)
        self.list_ctrl_data.AppendColumn("Txt", format=wx.LIST_FORMAT_LEFT, width=-1)
        sizer_3.Add(self.list_ctrl_data, 100, wx.ALL | wx.EXPAND, 0)

        self.panel_1.SetSizer(sizer_1)

        self.Layout()
        self.SetPosition( (int(self.config['win']['winfo_x']), int(self.config['win']['winfo_y'])) )
        self.SetSize( (int(self.config['win']['winfo_width']), int(self.config['win']['winfo_height']))
         )

        self.button_start.Bind(wx.EVT_TOGGLEBUTTON, self.btn_clk_start)
        self.button_file.Bind(wx.EVT_BUTTON, self.btn_clk_file)
        self.Bind(wx.EVT_CLOSE, self.frame_close)
        # end wxGlade

    def btn_clk_start(self, event):  # wxGlade: MyFrame.<event_handler>
        if self.button_start.GetValue():
            self.button_start.SetLabel('Stop')
            self.ft8dc.SetReceiving(True)
            self.ft8dc.ExecRecv(self.text_ctrl_ipaddr.GetValue(), self.text_ctrl_port.GetValue(), self.text_file.GetValue())
        else:
            self.button_start.SetLabel('Start')
            self.ft8dc.SetReceiving(False)
        event.Skip()

    def btn_clk_file(self, event):  # wxGlade: MyFrame.<event_handler>
        wildcard = "Adif (*.adi)|*.adi|"     \
           "All files (*.*)|*.*"
        dlg = wx.FileDialog(self,
            message="Choose a file",
            defaultDir=os.getcwd(),
            defaultFile=self.text_file.GetValue(),
            wildcard=wildcard,
            style=wx.FD_OPEN | 
                  wx.FD_CHANGE_DIR | wx.FD_FILE_MUST_EXIST |
                  wx.FD_PREVIEW
            )
        if dlg.ShowModal() == wx.ID_OK:
            paths = dlg.GetPaths()
            print(paths)
            self.text_file.SetValue(paths[0])
        dlg.Destroy()
        event.Skip()

    def frame_close(self, event):  # wxGlade: MyFrame.<event_handler>
        self.pos = self.GetScreenPosition()
        self.size = self.GetSize()

        self.config = configparser.ConfigParser()
        self.config.read_dict(self.default_configs)
        self.config.read(self.config_file)
        self.config['win'] = {}
        self.config['win']['winfo_width'] = str(self.size[0])
        self.config['win']['winfo_height'] = str(self.size[1])
        self.config['win']['winfo_x'] = str(self.pos[0])
        self.config['win']['winfo_y'] = str(self.pos[1])

        self.config['udp'] = {}
        self.config['udp']['ip'] = self.text_ctrl_ipaddr.GetValue()
        self.config['udp']['num'] = self.text_ctrl_port.GetValue()
        self.config['adif'] = {}
        self.config['adif']['file'] = self.text_file.GetValue()

        with open(self.config_file, 'w') as f:
            self.config.write(f)

        event.Skip()

# end of class MyFrame

class MyApp(wx.App):
    def OnInit(self):
        self.frame = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
